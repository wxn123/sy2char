#!/usr/bin/env python
# -*- coding=utf-8 -*-

import socket
import threading
import time
import sys


def socket_service():
    try:
        s = socket.socket(socket.AF_INET,
socket.SOCK_STREAM)
#创建TCP Socket（套接字是不同主机之间进程进行双向通信的端点）
        s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)#设置给定套接字选项的值
        s.bind(('192.168.236.129', 6666))#将服务端socket绑定到指定的地址和端口
        s.listen(10)#开始监听
    except socket.error as msg:
        print msg
        sys.exit(1)
    print 'Waiting connection...'

#进入循环，不断接受客户端的连接请求
    while 1:
        conn, addr = s.accept()#接受TCP连接，并返回新的套接字（conn是新的套接字对象，）与IP地址（连接客户端的地址）
        t = threading.Thread(target=deal_data, args=(conn, addr))#定义多线程，第一个是线程函数变量（需要线程去执行的方法名，第二个是线程执行方法接受的参数（新的套接字对象、地址））
        t.start()#启动刚刚创建的进程

def deal_data(conn, addr):
    print 'Accept new connection from {0}'.format(addr)#打印发送连接消息
    conn.send('Hi, Welcome to the server!')#发送这行消息到客户端
    while 1:
        data = conn.recv(1024) #把接受的数据实例化
        print '{0} client send data is {1}'.format(addr, data)#输出从客户端接到的数据
        #time.sleep(1)
        if data == 'exit' or not data: #如果没有信息或者信息为exit
            print '{0} connection close'.format(addr)
#输出该地址连接关闭
            conn.send('Connection closed!')#将“连接关闭”发送到客户端
            break#退出循环
        conn.send('Hello, {0}'.format(data))#把结果信息发给客户端
    conn.close()#关闭连接


if __name__ == '__main__':
    socket_service()
